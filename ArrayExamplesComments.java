

import java.util.Arrays;//необходимо е, за да може да се използва клас Arrays
import java.util.Scanner;//необходимо е, за да може да се използва клас Scanner


public class ArrayExamplesComments {
    public static void main (String args[])
    {
    
        //декларация на едномерен масив
        //все още за него не е заделена памет
        int array1[];
                
        //заделяне на памет за 5 целочислени стойности
        //в оперативната памет се заделя 5 х необходимите байтове за съхранение на цяло число (int)
        //в променливата array1 се записва адресът, от който започва поредицата от заделена памет
        array1= new int[5];
        
        //Нека да въведем стойности за всеки елемент на масива
       
        //Всеки елемент на масива има индекс(пореден номер), чрез който е достъпен
        //Първият елемент има пореден номер или индекс 0 (защото е отменстен с 0 елемента от началото на поредицата стойности)
        //Нека първият елемент от масива да има стойност 1. 
         array1[0] = 1;       
        //Нека втория елемент от масива да има стойност 2. 
         array1[1] = 1;                
         
        //И така до кога? Ако масивът е с 1000, 10000....елемента, дали е ефетивен този начина на попълване на стойности за всички елементи на масива? 
        
        //Въвеждане на стойности за всеки елемент от масив
        //И нека това да стане чрез въвеждане на стойности от клавиатурата
        System.out.println("----------------------------------------------------------------------");
        System.out.println("Въвеждане на стойности в масива");
        System.out.println("----------------------------------------------------------------------");
        Scanner s = new Scanner(System.in);
        //масивът е множество от стойности
        //за да се въведат стойности за всеки един елемент от масива е небходимо действието 'прочитам от клавиатурата-присвоявам' трябва се повтори толкова пъти колкото елемента има в масива
        //а щом трябва да се повтори нещо....
         System.out.println("Въведете 5 елемента");  
        for (int i=0;i<5;i++) 
            //i  е управляваща променлива на цикъла и се използва за индекс на поредния елемент на масива
            array1[i] = s.nextInt();//и нека прочетената стойност от клавиатурата да се присвои на текущия елемент (елемент с индекс i)
        
         System.out.println("----------------------------------------------------------------------");
         System.out.println("Извеждане на стойности в масива");
         System.out.println("----------------------------------------------------------------------");
        //да проверим съдържанието на масива
        //Извеждане на стойности на масив
        //за да се отпечатат на екран всички елементи на масива е необходимо да го обходим от първи до последния елемент
        //i<5 защото масивът има 5 елемента и последния валиден индекс е 4
          for (int i=0;i<5;i++)
              System.out.println("Елемент No."+i+"="+array1[i]);
         
          
        //А може би има добра алтернатива на извеждането на елементите на масив
        //например като последователност от стойности, разделени със запетая
        System.out.println("----------------------------------------------------------------------");
        System.out.println("Извеждане на стойности в масива като символен низ");
        System.out.println("----------------------------------------------------------------------");
        System.out.println(Arrays.toString(array1));
        
        System.out.println("----------------------------------------------------------------------");
        System.out.println("Сортиране (подреждане) на стойности в масива");
        System.out.println("----------------------------------------------------------------------");
         //нека да подредим елементите в масива в нарстващ ред
         //работата с подредени съвкупности винаги има предимства за по-бързо обхождане  и изпълняване на алгорими по търсене на стойност в масив
        
         int temp;
           for(int i=0; i < array1.length-1; i++)
           {

               for(int j=1; j < array1.length-i; j++){
                   if(array1[j-1] < array1[j]){
                       temp=array1[j-1];
                       array1[j-1] = array1[j];
                       array1[j] = temp;
                   }
               }
               System.out.println("Итерация " + (i+1) + ": " + Arrays.toString(array1));

       }
        //А може би сортирането (подреждането) би било по-елегантно, ако използваме готови "неща"
        //нека да използваме класа Array, който предоставя много реализирани алгоритми за работа с масиви
        //като например сортиране
        System.out.println("----------------------------------------------------------------------");
        System.out.println("Сортиране (подреждане) на стойности в масива чрез Arrays.sort");
        System.out.println("----------------------------------------------------------------------");
        Arrays.sort(array1);//извикване на метод с име sort, който реализира идеята за подреждането на масив
        //И нека отново да изведем стойностите, за да проверим резултата
          for (int i=0;i<5;i++)
                  System.out.println("Елемент No."+i+"="+array1[i]);
          
        System.out.println("----------------------------------------------------------------------");
        System.out.println("Сравнение на два масива");  
        System.out.println("----------------------------------------------------------------------");
        
        
        System.out.println("----------------------------------------------------------------------");
        System.out.println("    Сравнение на начални адреси");  
        System.out.println("----------------------------------------------------------------------");
        //Да декларираме и втори масив
        //чийто стойности да са известни още при неговата декларация
        //т.е. го инициализираме
        int[] array2 = {1,3,4,5,6};//не само е деклариран, но и е заделена памет за 5 елемента
           
        //а дали двата масива са еднакви?
        
        if(array1==array2)//това сравнение е синтактично вярно, но некоректно. 
                          //Сравняват се адресите, от които започват поредиците от стойности за двата масива. 
                          //А те започват от различни адреси=>няма как да са равни
            System.out.println("Масивите са еднакви");
        else
            System.out.println("Масивите НЕ са еднакви");//ясно е защо това е извеждания резултат
            
        
        //Какво означава два масива да са еднакви (равни)?
        //да имат еднакъв брой елементи
        //и всички елементи да съвпадат в съответната позиция
        
        System.out.println("----------------------------------------------------------------------");
        System.out.println("    Сравнение на два масива-по дължина и елементи");  
        System.out.println("----------------------------------------------------------------------");
        //Да проверим дължината дали е еднаква
        if(array1.length == array2.length)//.lenght е атрибут, който вски масив притежава. Стойността на този атрибут е броя на елементите в масива
            {
            //Ако дължините съвпадат да се заемем да проверим елементите дали съвпадат
            //И щом ще трябва да сравняваме всички елементи
            //е необходимо отново да обходим масива от начало до край
            
            for (int i=0;i<array1.length;i++)
            if(array1[i]==array2[i])
                System.out.println("Масивите са еднакви");
            else
                System.out.println("Масивите НЕ са еднакви");
            }
            //и тема за размисъл: колко пъти ще се изведат текстовете? има ли смисъл да се повтарят? как да направим така, че да се извеждат само по веднъж?
        else
            //този програмен код ще се изпълни само ако масивите са с различна дължина (брой елементи)
            //в този случай е безмислено да се прохождат елементите и да се проверяват стойностите
            System.out.println("Масивите НЕ са еднакви");
        
        System.out.println("----------------------------------------------------------------------");
        System.out.println("Сравнение на два масива чрез използване на метод Arrays.equals");  
        System.out.println("----------------------------------------------------------------------");
        //А дали това сравнение не може да бъде направено отново по-елегенатно като използваме реализиран алгоритъм в класа Array
        boolean result = Arrays.equals(array1, array2);
        System.out.println("Еднакви ли са двата масива?" +result);
       
    }
    
}
